#ifndef _SHARED_DATA_H_
#define _SHARED_DATA_H_

//2020-12-28
//change pressure set step to 0.5cmH2O(original step is 1)
#define CHANGE_PRESSURE_STEP_TO_05

#ifdef CHANGE_PRESSURE_STEP_TO_05
//pressure set step is 0.5cmH20
#define PRESSURE_SET_STEP           50

//if change pressure set step to 0.5cmH2O
//WE NEED TO set setMaxPressureSlider,setMinPressureSlider,setPressureSlider like below:
// 4.0cmH20    400
//20.0cmH20    2000
// slider range : 4-36 ,which mapped to 4.0-20.0, step is 0.5
//
//   4                          20
//   |--------------------------|
//   |__________________________|
//
//  4.0 4.5  5.0  5.5          20.0       pressure value(cmH20)
//   |   |    |    |     ...... |
//   4   5    6    7            36        slider value
//   |   |    |    |            |
// 400  450  500  550          2000       (these value are used in our code,let's say there are y)
//
//
// HOW to get y value via slider value?
// y=400+(slider_value-4)*50
// example: 2000=400+(36-4)*50
//
// HOW to get slider value via y?
// slider_value=(y-400)/50+4
// example: 5=(450-400)/50+4
#define PRESSURE_VALUE_2_SLIDER_VALUE(val) ((val-400)/PRESSURE_SET_STEP+4)
#define SLIDER_VALUE_2_PRESSURE_VAL(val) (400+(val-4)*PRESSURE_SET_STEP)
#endif




/* Define any one build */
//#define FRESCA_REV_X1       1
//#define FRESCA_REV_X2       2
#define FRESCA_REV_X3       3

#if defined FRESCA_REV_X1
#define FRESCA_REV      FRESCA_REV_X1
#elif defined FRESCA_REV_X2
#define FRESCA_REV      FRESCA_REV_X2
#elif defined FRESCA_REV_X3
#define FRESCA_REV      FRESCA_REV_X3
#endif

#define SOFTWARE_MAJOR_VERSION       2
#define SOFTWARE_MINOR_VERSION       0


#define FIRMWARE_MAJOR_VERSION       0
#define FIRMWARE_MINOR_VERSION       32

#define MINUTE_TO_COUNT(minute)     (minute * 60 * 100)
#define SECONDS_TO_COUNT(seconds)     (seconds * 100)


enum {
    THERAPY_MODE_CPAP=0,
    THERAPY_MODE_APAP
};


enum {
    EVENT_TYPE_NONE=0,
    EVENT_TYPE_BLOWER_ON,
    EVENT_TYPE_USAGE_TIME,
    EVENT_TYPE_PRECURSOR,
    EVENT_TYPE_HYPOAPNEA,
    EVENT_TYPE_APNEA,
    EVENT_TYPE_APNEA2,
    EVENT_TYPE_LEAK,
    EVENT_TYPE_LEAK2,
    EVENT_LEAK_RELEASED
};

enum {
    EVENT_TYPE_UNSTABLE=1,
    EVENT_TYPE_STABLE,
};

//enum {
////    EVENT_TYPE_MASK_OFF=1,
////    EVENT_TYPE_LEAK,
////    EVENT_TYPE_LEAK2,
//};

enum {
    eSTATE_MACHINE_INIT_INSP=1,
    eSTATE_MACHINE_INSPIRATION,
    eSTATE_MACHINE_IE_TRANSITION,
    eSTATE_MACHINE_EXPIRATION,
    eSTATE_MACHINE_EI_TRANSITION
};

enum {
    eTHERAPY_PERIOD_GOTOSLEEP=1,
    eTHERAPY_PERIOD_RAMP_TIME,
    eTHERAPY_PERIOD_SNOOZE_TIME,
    eTHERAPY_PERIOD_THERAPY,
    eTHERAPY_MASK_FIT_TEST,
    eTHERAPY_MASK_DRY_TEST
};

enum {
    eIPC_PRU0_INIT=1,
    eIPC_PRU1_INIT,
    eIPC_SENSOR_DATA_UPDATED,
    eIPC_FLOW_SENSOR_SERIAL_NO_MSB,
    eIPC_FLOW_SENSOR_SERIAL_NO_LSB,
    eIPC_FLOW_SENSOR_PRODUCT_ID,
    eIPC_CONTROL_LOOP_TIME,

    eIPC_FLOW_ADC_COUNT,
    eIPC_PRESSURE_ADC_COUNT,
    eIPC_VOLTAGE_INPUT_ADC_COUNT,
    eIPC_BLDC_CURRENT_ADC_COUNT,
    eIPC_MOTOR_TEMP_ADC_COUNT,
    eIPC_BLDC_SPEED_RAW_COUNT,

    eIPC_FLOW_ENG_DATA,
    eIPC_PRESSURE_ENG_DATA,
    eIPC_VOLTAGE_INPUT_ENG_DATA,
    eIPC_BLDC_CURRENT_ENG_DATA,
    eIPC_MOTOR_TEMP_ENG_DATA,
    eIPC_BLDC_SPEED_ENG_DATA,

    eIPC_CALIBRATION_GET_PRESSURE_OFFSET,
    eIPC_CALIBRATION_PRESSURE_OFFSET_AVERAGE,
    eIPC_CALIBRATION_PRESSURE_OFFSET_COUNT,
    eIPC_CALIBRATION_PRESSURE_OFFSET_UPDATED,
    eIPC_CALIBRATION_PRESSURE_OFFSET,
    eIPC_CALIBRATION_FLOW_OFFSET,
    eIPC_CALIBRATION_PRESSURE_SLOP,
    eIPC_CALIBRATION_FLOW_SLOP,
    eIPC_CALIBRATION_LEAK_THRESHOLD,

    eIPC_SETTINGS_SET_PRESSURE,
    eIPC_SETTINGS_TARGET_PRESSURE,
    eIPC_SETTINGS_MIN_PRESSURE_APAP,
    eIPC_SETTINGS_MAX_PRESSURE_APAP,
    eIPC_SETTINGS_COMFORT_LEVEL,
    eIPC_SETTINGS_COMFORT_STATE,
    eIPC_SETTINGS_COMFORT_PRESSURE_STEP_SIZE,
    eIPC_SETTINGS_COMFORT_PRESSURE_AFTER_DROP,
    eIPC_SETTINGS_MODE,
    eIPC_SETTINGS_GOTOSLEEP_STATE,
    eIPC_SETTINGS_GOTOSLEEP_MINUTE,
    eIPC_SETTINGS_GOTOSLEEP_TIME_COUNT,
    eIPC_SETTINGS_RAMP_STATE,
    eIPC_SETTINGS_RAMP_MINUTE,
    eIPC_SETTINGS_RAMP_TIME_COUNT,
    eIPC_SETTINGS_RAMP_PRESSURE_STEP_SIZE,
    eIPC_SETTINGS_SNOOZE_STATE,
    eIPC_SETTINGS_SNOOZE_MINUTE,
    eIPC_SETTINGS_SNOOZE_TIME_COUNT,
    eIPC_SETTINGS_AUTOSTART_ENABLE,
    eIPC_SETTINGS_AUTOSTART_FLOW_DETECT_INSP_THRESHOLD,
    eIPC_SETTINGS_AUTOSTART_FLOW_DETECT_EXP_THRESHOLD,
    eIPC_SETTINGS_FLOW_IE_THRESHOLD_PERCENTAGE,
    eIPC_SETTINGS_FLOW_EI_THRESHOLD,

    eIPC_PID_KP_PARAM,
    eIPC_PID_KI_PARAM,
    eIPC_PID_KI_POS_PARAM,
    eIPC_PID_KFF_PARAM,
    eIPC_PID_INTEGRAL_PARAM,
    eIPC_PID_ERROR_PARAM,
    eIPC_PID_DRV_OUTPUT_COUNT,
    eIPC_PID_DRV_LAST_OUTPUT_COUNT,

    eIPC_EVENT_TYPE1,
    eIPC_EVENT_TYPE2,
    eIPC_EVENT_TYPE3,
    eIPC_EVENT_TYPE4,
    eIPC_EVENT_CHANGED,
    eIPC_EVENT_HYPOAPNEA_COUNT,
    eIPC_EVENT_APAP_CONTROL_STATE,
    eIPC_EVENT_LEAK_TIME_COUNT,
    eIPC_EVENT_LEAK_STOP_TIME,
    eIPC_EVENT_LEAK_INCREASE_COUNT,

    eIPC_THERAPY_IE_STATE,
    eIPC_THERAPY_RUNNING_PERIOD,
    eIPC_THERAPY_NEW_BREATH_DETECTED,
    eIPC_THERAPY_BREATH_TIME,
    eIPC_THERAPY_AMPLITUDE,
    eIPC_THERAPY_BREATH_COUNT,
    eIPC_THERAPY_STABLE_BREATH,
    eIPC_THERAPY_STABLE_BREATH_TIME,
    eIPC_THERAPY_RUNNING,
    eIPC_THERAPY_START_TIME_COUNT,
    eIPC_THERAPY_APAP_CONTROL_TIME_COUNT,
    eIPC_THERAPY_APAP_CONTROL_ENABLE,
    eIPC_THERAPY_APAP_APNEA2_TIMEOUT,
    eIPC_THERAPY_STATE_TIME_COUNT,

    eIPC_AUTOSTART_INSP_TRIG_COUNT,
    eIPC_AUTOSTART_EXP_TRIG_COUNT,
    eIPC_AUTOSTART_SPONTANEOUS_FLAG,
    eIPC_AUTOSTART_SPONTANEOUS_BREATH_COUNT,
    eIPC_AUTOSTART_SPONTANEOUS_TIMER_COUNT,
    eIPC_AUTOSTART_FLOW_TRIG_INSP_ENABLED,


    eIPC_BREATH_IE_TRANSITION_SAMPLES,
    eIPC_BREATH_EI_TRANSITION_SAMPLES,
    eIPC_BREATH_IE_COUNT,
    eIPC_BREATH_EI_COUNT,
    eIPC_BREATH_INSPIRATION_COUNT,
    eIPC_BREATH_EXPIRATION_COUNT,
    eIPC_BREATH_FLOW_MAX,
    eIPC_BREATH_FLOW_MIN,
    eIPC_BREATH_FLOW_LEAK,
    eIPC_BREATH_FLOW_LEAK_AVERAGE,
    eIPC_BREATH_FLOW_LEAK_AVERAGE_COUNT,
    eIPC_BREATH_FLOW_LEAK_EXHALE,
    eIPC_BREATH_FLOW_EVENT_DETECTION,
    eIPC_BREATH_FLOW_MAX_EVENT_DETECTION,
    eIPC_BREATH_FLOW_MIN_EVENT_DETECTION,

    eIPC_PRU_1S_TIMEOUT,
    eIPC_PRU_1S_TIMEOUT_COUNT,
    eIPC_PRU_10MS_TIMEOUT,
    eIPC_PRU0_FREE_TIME_COUNT,
    eIPC_PRU1_FREE_TIME_COUNT,


    eIPC_PRU0_UPDATE_TO_ARM,
    eIPC_PRU0_UPDATE_TO_ARM_CMD,
    eIPC_PRU1_UPDATE_TO_ARM,
    eIPC_PRU1_UPDATE_TO_ARM_CMD,
    eIPC_ARM_UPDATE_TO_PRU0,
    eIPC_ARM_UPDATE_TO_PRU1,

    eIPC_ERROR_DRV_IC,
    eIPC_MCP3204_MEASUREMENT_INVALID_ERROR,
    eIPC_MCP3202_MEASUREMENT_INVALID_ERROR,
    eIPC_FLOW_SENSOR_FAULT_ERROR,
    eIPC_I2C1_BUS_FAULT_ERROR,

    eIPC_DATA_LOG_COUNT,

    eIPC_PARAMETER_TUNE_BREATH_AVERAGE,
    eIPC_PARAMETER_TUNE_W1,
    eIPC_PARAMETER_TUNE_W2,
    eIPC_PARAMETER_TUNE_VARIABLE1,
    eIPC_PARAMETER_TUNE_APNEA_THRESHOLD,
    eIPC_PARAMETER_TUNE_PRECURSOR_THRESHOLD,
    eIPC_PARAMETER_TUNE_FLOW_FILTER_COFF,
    eIPC_PARAMETER_TUNE_MAX_ENABLE_TIME,
    eIPC_PARAMETER_TUNE_EN_IF_STABLE,
    eIPC_PARAMETER_TUNE_FLOW_AVERAGE,
    eIPC_PARAMETER_TUNE_NO_EVENT_FOR_TIME,
    eIPC_PARAMETER_TUNE_EVENT_THRESHOLD,
    eIPC_PARAMETER_TUNE_APNEA_INCREMENT,
    eIPC_PARAMETER_TUNE_APNEA2_INCREMENT,
    eIPC_PARAMETER_TUNE_HYPOAPNEA_INCREMENT,
    eIPC_PARAMETER_TUNE_PRECURSOR_INCREMENT,
    eIPC_PARAMETER_TUNE_APNEA2_THRESHOLD_COUNT,
    eIPC_PARAMETER_TUNE_LEAK2_THRESHOLD_COUNT,
    eIPC_PARAMETER_TUNE_LEAK_ALGORITHM_STATE,
    eIPC_PARAMETER_TUNE_LEAK_FLOW_MULTIPLIER,
    eIPC_PARAMETER_TUNE_LEAK2_FLOW_MULTIPLIER,
    eIPC_PARAMETER_TUNE_APNEA2_FLOW_MULTIPLIER,
    eIPC_PARAMETER_TUNE_FLOW_COFF_EVENT_DETECTION,

    eIPC_PARAMETER_TUNE_PRE_CURSOR_THRESHOLD45,
    eIPC_PARAMETER_TUNE_PRE_CURSOR_THRESHOLD67,
    eIPC_PARAMETER_TUNE_PRE_CURSOR_THRESHOLD89,
    eIPC_PARAMETER_TUNE_PRE_CURSOR_THRESHOLD1011,
    eIPC_PARAMETER_TUNE_PRE_CURSOR_THRESHOLD1213,
    eIPC_PARAMETER_TUNE_PRE_CURSOR_THRESHOLD1415,
    eIPC_PARAMETER_TUNE_PRE_CURSOR_THRESHOLD1617,
    eIPC_PARAMETER_TUNE_PRE_CURSOR_THRESHOLD1819,
    eIPC_PARAMETER_TUNE_PRE_CURSOR_THRESHOLD20,
    eIPC_PARAMETER_TUNE_REFERENCE_WINDOW,

    eIPC_PARAMETER_TUNE_APNEA_THRESHOLD1011,
    eIPC_PARAMETER_TUNE_APNEA_THRESHOLD1213,
    eIPC_PARAMETER_TUNE_APNEA_THRESHOLD1415,
    eIPC_PARAMETER_TUNE_APNEA_THRESHOLD1617,
    eIPC_PARAMETER_TUNE_APNEA_THRESHOLD1819,
    eIPC_PARAMETER_TUNE_APNEA_THRESHOLD20,
    eIPC_PARAMETER_TUNE_APNEA_THRESHOLD45,
    eIPC_PARAMETER_TUNE_APNEA_THRESHOLD67,
    eIPC_PARAMETER_TUNE_APNEA_THRESHOLD89,

//    eIPC_PARAMETER_TUNE_PRE_CURSOR_THRESHOLDA,
//    eIPC_PARAMETER_TUNE_PRE_CURSOR_THRESHOLDB,
//    eIPC_PARAMETER_TUNE_PRE_CURSOR_THRESHOLDC,
    eIPC_PARAMETER_TUNE_ALGO2_BUFFER_SIZE,

    eIPC_MANUFACTURING_MODE,
    eIPC_MANUFACTURING_BLOWER_STATE,
    eIPC_MANUFACTURING_BLOWER_SPEED,
    eIPC_MANUFACTURING_UPDATE_COUNT,
    eIPC_MANUFACTURING_UPDATE_DATA,
    eIPC_MANUFACTURING_FLOW_ADC_COUNT,
    eIPC_MANUFACTURING_PRESSURE_ADC_COUNT,
    eIPC_MANUFACTURING_VOLTAGE_INPUT_ADC_COUNT,
    eIPC_MANUFACTURING_BLDC_CURRENT_ADC_COUNT,
    eIPC_MANUFACTURING_MOTOR_TEMP_ADC_COUNT,
    eIPC_MANUFACTURING_BLDC_SPEED_RAW_COUNT,

    eIPC_MASK_FIT_TEST_ENABLE,

    eIPC_MASK_DRY_ENABLE,


    eIPC_DATA_LOG_FLOW_BREATH,
    eIPC_DATA_LOG_FLOW_EVENT,

    eIPC_CURRENT_WINDOW_AVG_DATA,
    eIPC_REFERENCE_WINDOW_AVG_DATA,

};

#endif

